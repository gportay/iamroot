#!/usr/bin/env bash
#
# Copyright 2023 Gaël PORTAY
#
# SPDX-License-Identifier: LGPL-2.1-or-later
#

set -e

VERSION=15

usage() {
	cat <<EOF
Usage: ${0##*/} -h | -V
       ${0##*/} [-g group name | #gid] [-p prompt] [-u user name | #uid]
       ${0##*/} [-bEHP] [-C fd] [-g group name | #gid] [-p prompt] [-u user name | #uid] [VAR=value] -i | -s [command]

Execute a command as the superuser or another user, in an iamroot environment
ready to emulate the chroot(2) syscall for unprivileged users.

The options are as follows:
     -u user, --user=user
             Run the command as a user other than the default target
             user (usually root).  The user may be either a user name or
             a numeric user-ID (UID) prefixed with the ‘#’ character
             (e.g., ‘#0’ for UID 0).  When running commands as a UID,
             many shells require that the ‘#’ be escaped with a
             backslash (‘\’).  Some security policies may restrict UIDs
             to those listed in the password database.  The sudoers
             policy allows UIDs that are not in the password database as
             long as the targetpw option is not set.  Other security
             policies may not support this.
     -g group, --group=group
             Run the command with the primary group set to group instead
             of the primary group specified by the target user's
             password database entry.  The group may be either a group
             name or a numeric group-ID (GID) prefixed with the ‘#’
             character (e.g., ‘#0’ for GID 0).  When running a command
             as a GID, many shells require that the ‘#’ be escaped with
             a backslash (‘\’).  If no -u option is specified, the
             command will be run as the invoking user.  In either case,
             the primary group will be set to group.  The sudoers policy
             permits any of the target user's groups to be specified via
             the -g option as long as the -P option is not in use.
     -D directory, --chdir=directory
             Run the command in the specified directory instead of the
             current working directory.  The security policy may return
             an error if the user does not have permission to specify
             the working directory.
     -E, --preserve-env
             Indicates to the security policy that the user wishes to
             preserve their existing environment variables.  The
             security policy may return an error if the user does not
             have permission to preserve the environment.
     --preserve-env=list
             Indicates to the security policy that the user wishes to
             add the comma-separated list of environment variables to
             those preserved from the user's environment.  The security
             policy may return an error if the user does not have
             permission to preserve the environment.  This option may be
             specified multiple times.
     -R directory, --chroot=directory
             Change to the specified root directory (see chroot(8))
             before running the command.  The security policy may return
             an error if the user does not have permission to specify
             the root directory.

iamroot specific options:
      -u USER, --user USER      Run the command as a user other than the default
                                target user (usually root). The user may be either
                                a user name or a numeric user-ID (UID) prefixed
                                with the ‘#’ character (e.g., ‘#0’ for UID 0).
                                When running commands as a UID, many shells
                                require that the ‘#’ be escaped with a backslash
                                (‘\’).
      -g GROUP, --group GROUP   Run the command with the primary group set to
                                group instead of the primary group specified by
                                the target user's password database entry. The
                                group may be either a group name or a numeric
                                group-ID (GID) prefixed with the ‘#’ character
                                (e.g., ‘#0’ for GID 0). When running a command as
                                a GID, many shells require that the ‘#’ be
                                escaped with a backslash (‘\’).
      -R DIR, --root DIR        Change to the specified root directory (see
                                chroot(8)) before running the command.
      -D DIR, --chdir DIR       Run the command in the specified directory instead
                                of the current working directory.
      -E, --preserve-env ENV    Preserve the comma-separated list of environment
                                variables.
      --deflib PATH             Default library path to use in chroot.
      --exec FILE               Absolute path to the iamroot exec script to
                                use.
      --library LIB             Absolute path to the iamroot library to use.
      --shell SHELL             Set shell interpretor.
                                Equivalent to set ISH=<SHELL>.
      --no-color                Turn off color.
      --fatal                   Abort on error.
      --debug                   Turn on debug mode.
      --debug-fd FD             Set debug fd.
      --debug-ignore REGEX      Regular expression of functions to ignore in
                                debug mode.
                                Does not imply --debug.
      --exec-ignore REGEX       Regular expression of executable path to ignore
                                at execve().
      --path-resolution-ignore  REGEX
                                Regular expression of path to ignore for path
                                resolution in chroot.
      --version                 Print version.
      --help                    Print usage.

Environment variables:
      SHELL                     The shell interpreter to use.

      IDO_COMMAND               Set to the command run by ish, including any
                                args.

      IDO_GID                   Set to the group-ID of the user who invoked
                                ido.

      IDO_UID                   Set to the user-ID of the user who invoked
                                ido.

      IDO_USER                  Set to the login name of the user who invoked
                                ido.

      IDOSHELL                  Set shell interpretor to use.
                                Equivalent to --shell.

      IDO_PRESERVE_ENV          Set environment to preserve.
                                Equivalent to --preserve-env ENV.

      IAMROOT_ROOT              Set absolute path to root directory to chroot
                                in. Equivalent to --root DIR.

      IAMROOT_DEFLIB            Set default library path to use in chroot.
                                Equivalent to --deflib PATH.

      IAMROOT_EXEC              Set absolute path to exec script to use.
                                Equivalent to --exec EXEC.

      IAMROOT_LIB               Set absolute path to library to use.
                                Equivalent to --library LIB.

      IAMROOT_FATAL             Set abort on error.
                                Equivalent to --fatal.

      IAMROOT_DEBUG             Turn on debug mode.
                                Equivalent to --debug.

      IAMROOT_DEBUG_FD          Set debug fd.
                                Equivalent to --debug-fd.

      IAMROOT_DEBUG_IGNORE      Set functions to ignore in debug mode.
                                Equivalent to --debug-ignore.

      IAMROOT_EXEC_IGNORE       Set executable path to ignore in execve().
                                Equivalent to --exec-ignore.

      IAMROOT_PATH_RESOLUTION_IGNORE
                                Set path to ignore for path resolution in
                                chroot.
                                Equivalent to --path-resolution-ignore.
EOF
}

IAMROOT_LIB="${IAMROOT_LIB:-/usr/local/lib/iamroot/libiamroot.so}"
export IAMROOT_LIB

IAMROOT_EXEC="${IAMROOT_EXEC:-/usr/local/lib/iamroot/exec.sh}"
export IAMROOT_EXEC

IDO_USER="${IDO_USER:-root}"
export IDO_USER

argv=()
while [[ "$#" -ne 0 ]]
do
	if [[ "$1" == "--help" ]]
	then
		usage
		exit 0
	elif [[ "$1" == "--version" ]]
	then
		echo "$VERSION"
		exit 0
	elif [[ "$1" == "--path-resolution-ignore" ]]
	then
		shift
		IAMROOT_PATH_RESOLUTION_IGNORE="$1"
		export IAMROOT_PATH_RESOLUTION_IGNORE
	elif [[ "$1" == "--exec-ignore" ]]
	then
		shift
		IAMROOT_EXEC_IGNORE="$1"
		export IAMROOT_EXEC_IGNORE
	elif [[ "$1" == "--debug-ignore" ]]
	then
		shift
		IAMROOT_DEBUG_IGNORE="$1"
		export IAMROOT_DEBUG_IGNORE
	elif [[ "$1" == "--debug-fd" ]]
	then
		shift
		IAMROOT_DEBUG_FD="$1"
		export IAMROOT_DEBUG_FD
	elif [[ "$1" == "--debug" ]]
	then
		IAMROOT_DEBUG="$((IAMROOT_DEBUG+1))"
		export IAMROOT_DEBUG
	elif [[ "$1" == "--fatal" ]]
	then
		IAMROOT_FATAL="1"
		export IAMROOT_FATAL
	elif [[ "$1" == "--no-color" ]]
	then
		NO_COLOR=1
		export NO_COLOR
	elif [[ "$1" == "--shell" ]]
	then
		shift
		IDOSHELL="$1"
		export IDOSHELL
	elif [[ "$1" == "--library" ]]
	then
		shift
		IAMROOT_LIB="$1"
		export IAMROOT_LIB
	elif [[ "$1" == "--exec" ]]
	then
		shift
		IAMROOT_EXEC="$1"
		export IAMROOT_EXEC
	elif [[ "$1" == "--deflib" ]]
	then
		shift
		IAMROOT_DEFLIB="$1"
		export IAMROOT_DEFLIB
	elif [[ "$1" == "--path" ]]
	then
		shift
		IAMROOT_PATH="$1"
		export IAMROOT_PATH
	elif [[ "$1" == "--preserve-env" ]]
	then
		shift
		IDO_PRESERVE_ENV="$1"
		export IDO_PRESERVE_ENV
	elif [[ "$1" == "-D" ]] ||
             [[ "$1" == "--chdir" ]]
	then
		shift
		opt_D="$1"
	elif [[ "$1" == "-R" ]] ||
             [[ "$1" == "--root" ]]
	then
		shift
		IAMROOT_ROOT="$1"
		export IAMROOT_ROOT
	elif [[ "$1" == "-g" ]] ||
             [[ "$1" == "--group" ]]
	then
		shift
		IDO_GROUP="$1"
		export IDO_GROUP
	elif [[ "$1" == "-u" ]] ||
             [[ "$1" == "--user" ]]
	then
		shift
		IDO_USER="$1"
		export IDO_USER
	elif [[ "$1" == "--" ]]
	then
		shift
		break
	else
		break
	fi
	shift
done

if [[ "${opt_D:-}" ]]
then
	cd "${opt_D}"
fi

if [[ "${IAMROOT_DEBUG_FD:-}" ]] && [[ ! -e "/proc/$$/$IAMROOT_DEBUG_FD" ]]
then
	exec {IAMROOT_DEBUG_FD}>&2
fi

USER="$IDO_USER"
export USER

IAMROOT_UID="$(id -u "$IDO_USER")"
export IAMROOT_UID

IAMROOT_GID="$(id -g "$IDO_USER")"
export IAMROOT_GID

IAMROOT_GROUPS="$(id -G "$IDO_USER")"
export IAMROOT_GROUPS

mapfile -t envs < <(env)
for env in "${envs[@]}"
do
	var="${env%%=*}"
	if [[ "$var" =~ ^(IAMROOT_.*|IDO.*|LD_.*|PATH|HOME|SHELL|USER)$ ]]
	then
		continue
	elif [[ $IDO_PRESERVE_ENV ]] &&
	     [[ "$var" =~ ^(${IDO_PRESERVE_ENV//:/|})$ ]]
	then
		if [ "${IAMROOT_DEBUG:-0}" -gt 1 ]
		then
			echo "Info: Preserving $env" >&2
		fi
		continue
	else
		unset "$var"
	fi
done

command=(iamroot-shell --shell "${SHELL:-/bin/sh}" "${argv[@]}" "$@")

IDO_USER="$USER" \
IDO_UID="$UID" \
IDO_GID="${GROUPS[0]}" \
IDO_COMMAND="${command[*]}" \
LD_PRELOAD="$IAMROOT_LIB${LD_PRELOAD+:$LD_PRELOAD}" \
exec "${command[@]}"
